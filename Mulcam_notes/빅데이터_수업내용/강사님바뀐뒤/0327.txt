3.27

구글I/O 참가
전자정부프레임워크 참가



<1>
리눅스 alias
암호화 알고리즘
어떻게 썼는지 알겠지만 키가 없으면 복호화가 안되는 것 AES 128
cat과 echo를 써서 script를 짜는게 중요
여러 분산환경 컴터 한번에 업뎃 & 설치 가능
PuTTY

<2>
공개키 암호화 알고리즘 활용
1. 비밀스럽게 교환할 수 있는 암호화
2. 내가 암호화했다는 걸 알 수 있으니 인증수단
대신 연산이 비싸요
큰 데이터를 이렇게 변형할 수 없다.

대칭키 알고리즘은 어떻게 개인키를 전달하느냐
데이터가 크면 개인키를 써야해
그러면 이 개인키를 어떻게 관리해?
그건 공개키를 통해 서로 전달받아서
그 받은 개인키를 가지고 통신을 합니다.
그게 전자봉투

샤미르의 키분산 알고리즘
키를 쪼개서 그 중에 몇개만 있으면 원문이 만들어지게 됨

<3>
ssh: 보안이 적용된 원격 shell 전달 프로그램
putty 는 윈도우에서 ssh를 사용할 수 있는 프로그램

ssh 192.168.111.202 ls
Are you sure you want to continue connecting (yes/no)? yes
이걸 하면 자체적으로 URL을 기억한다. 그래서 URL에 물려있는 컴퓨터가 바뀌면 그걸 인식함

HOSTNAME바꾸기
[root@localhost ~]# cat /etc/hostname
localhost.localdomain
[root@localhost ~]# hostnamectl set-hostname s1
[root@localhost ~]# cat /etc/hostname
s1
[root@localhost ~]# 

DNS바꾸기
[root@localhost ~]# echo "192.168.111.202 s2" >> /etc/hosts
[root@localhost ~]# cat /etc/hosts

DNS를 바꿔두면 ping s2, ping s3 같은 명령어가 먹는다
계속해서 URL를 적어야하는 수고를 덜 수 있음

자동로그인을 위해 ssh로 접속할 때 필요한 비밀번호 자동화하기
s1에서 공개키를 만들어서 s2에 묻어두고 온다
그러면 가능

ssh-keygen으로 생성하면
"어디에 저장할 지"
"무엇을 저장할지" 를 설정해야함 이것도 자동이 좋다.

[root@s1 ~]# ssh-copy-id s2
이렇게 하면 로그인할 때 비번입력 할 필요 없다

원리 
ssh-keygen으로 비밀키 생성
cat id_rsa.pub로 확인 후 전체 복사해서 가져간다
ssh s2로 접속
mkdir을 하든 해서 .ssh를 만든다
그 아래에 authorized_keys 파일에 비밀키를 입력
[root@s2 .ssh]# cat >> authorized_keys <<EOF (경로 주의)

처음 로그인 할 때 어쨌든 비번이 필요하다는 단점
그래서 ssh-pass라는 프로그램이 필요

[root@s1 ~]# rpm -qa | grep sshpass
[root@s1 ~]# yum search sshpass
Loaded plugins: fastestmirror, langpacks
Existing lock /var/run/yum.pid: another copy is running as pid 2295.
Another app is currently holding the yum lock; waiting for it to exit...
  The other application is: PackageKit
    Memory : 130 M RSS (534 MB VSZ)
    Started: Tue Mar 27 13:37:03 2018 - 1:09:30 ago
    State  : Sleeping, pid: 2295

파일이 있는지 확인 후 yum 설치파일이 있는지도 확인

sshpass설치하면 
sshpass -p 비번 ssh-copy-id s2 로 하면 s2로 들어갈 때 자동임
예제)sshpass -p admin ssh-copy-id s2
(이래서 리눅스 비번이 통일되어있는 것이 좋다.)


MariaDB
1. 마리아 설치
yum -y install mariadb mariadb-server mariadb-devel mariadb-libs

[root@s1 ~]# systemctl start mariadb
[root@s1 ~]# mysql -uroot -p
패스워드는 그냥 엔터

MariaDB [(none)]> use mysql
응답
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed


MariaDB [mysql]> update user set password=password('admin') where user='root';
응답
Query OK, 4 rows affected (0.00 sec)
Rows matched: 5  Changed: 4  Warnings: 0


MariaDB [mysql]> flush privileges;

응답
Query OK, 0 rows affected (0.00 sec)

MariaDB [mysql]> exit;
Bye


mysql -uroot -padmin 접속확인 (mysql -u유저아이디 -p패스워드)

sshpass 사용법

MariaDB [mysql]> show databases
MariaDB [bigdata]> show tables

